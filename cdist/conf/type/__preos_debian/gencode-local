#!/bin/sh
##
## 2016 Darko Poljak (darko.poljak at ungleich.ch)
##
## This file is part of cdist.
##
## cdist is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## cdist is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with cdist. If not, see <http://www.gnu.org/licenses/>.

which debootstrap 2>&1 > /dev/null
if [ $? -ne 0 ]
then
    echo "ERROR: debootstrap not found" >&2
    exit 1
fi

target_dir="/$__object_id"
arch=$(cat "$__object/parameter/arch")
suite=$(cat "$__object/parameter/suite")
if [ -f "$__object/parameter/mirror" ]
then
    mirror=$(cat "$__object/parameter/mirror")
else
    mirror=
fi

# bootstrap
if [ -f "$__object/parameter/bootstrap" ]
then
    if [ -e "$target_dir" ]
    then
        echo "ERROR: "${target_dir}" already exists " >&2
        exit 1
    fi

    cat <<EOF
mkdir -p "${target_dir}"
debootstrap --include=openssh-server --arch="${arch}" "${suite}" "${target_dir}" \
    ${mirror}
chroot "${target_dir}" /usr/bin/apt-get update
EOF
fi

# config
if [ -f "$__object/parameter/configure" ]
then
    cdist_params=$(cat "$__object/parameter/cdist-params")
    if [ -f "$__object/parameter/init-manifest" ]
    then
        init_manifest=$(cat "$__object/parameter/init-manifest")
    else
        init_manifest="${__type}/files/init"
    fi
    if [ -f "$__object/parameter/remote-exec" ]
    then
        remote_exec=$(cat "$__object/parameter/remote-exec")
    else
        remote_exec="${__type}/files/remote-exec.sh"
    fi
    if [ -f "$__object/parameter/remote-copy" ]
    then
        remote_copy=$(cat "$__object/parameter/remote-copy")
    else
        remote_copy="${__type}/files/remote-copy.sh"
    fi

    cat <<EOF
mount -t proc none "${target_dir}"/proc || true
mount -t sysfs none "${target_dir}"/sys || true
mount -t devpts none "${target_dir}"/dev/pts || true

cdist config ${cdist_params} -i "${init_manifest}" \
    --remote-exec "${remote_exec}" \
    --remote-copy "${remote_copy}" \
    "${target_dir}"
EOF
fi

if [ -f "$__object/parameter/bootstrap" ]
then
    cat <<EOF
chroot "${target_dir}" /usr/bin/apt-get autoclean
chroot "${target_dir}" /usr/bin/apt-get clean
chroot "${target_dir}" /usr/bin/apt-get autoremove
EOF
fi

if [ -f "$__object/parameter/pxe-boot-dir" ]
then
    pxe_boot_dir=$(cat "$__object/parameter/pxe-boot-dir")
    cat <<EOF
umount "${target_dir}"/dev/pts || true
umount "${target_dir}"/sys || true
umount "${target_dir}"/proc || true

mkdir -p "${pxe_boot_dir}"
cp "${target_dir}"/boot/vmlinuz-* "${pxe_boot_dir}"/kernel
cd "${target_dir}"
find . -print0 | cpio --null -o --format=newc | gzip -9 > "${pxe_boot_dir}"/initramfs
mkdir -p "${pxe_boot_dir}"/pxelinux.cfg
cat <<EOPXEF > "${pxe_boot_dir}"/pxelinux.cfg/default
DEFAULT preos
LABEL preos
KERNEL kernel
INITRD initramfs
EOPXEF

cp "${target_dir}"/usr/lib/PXELINUX/pxelinux.0 "${pxe_boot_dir}"/pxelinux.0
cp "${target_dir}"/usr/lib/syslinux/modules/bios/ldlinux.c32 \
    "${pxe_boot_dir}"/ldlinux.c32
EOF
fi
